-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.accounting_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code character varying NOT NULL UNIQUE,
  name character varying NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['income'::character varying, 'expense'::character varying, 'both'::character varying]::text[])),
  category character varying,
  description text,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  cost_type text CHECK (cost_type = ANY (ARRAY['income'::text, 'fixed_cost'::text, 'variable_cost'::text])),
  CONSTRAINT accounting_items_pkey PRIMARY KEY (id)
);
CREATE TABLE public.accounting_recommendations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid,
  work_type character varying NOT NULL,
  accounting_item_id uuid,
  confidence_score numeric,
  usage_count integer DEFAULT 1,
  avg_amount numeric,
  last_used_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT accounting_recommendations_pkey PRIMARY KEY (id),
  CONSTRAINT accounting_recommendations_accounting_item_id_fkey FOREIGN KEY (accounting_item_id) REFERENCES public.accounting_items(id),
  CONSTRAINT accounting_recommendations_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.address_geocoding_cache (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  query text NOT NULL,
  query_type text NOT NULL,
  latitude numeric,
  longitude numeric,
  formatted_address text,
  prefecture text,
  city text,
  source text NOT NULL,
  confidence_score numeric,
  expires_at timestamp with time zone DEFAULT (now() + '30 days'::interval),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT address_geocoding_cache_pkey PRIMARY KEY (id)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  contact_email text NOT NULL UNIQUE,
  phone text,
  address text,
  is_active boolean NOT NULL DEFAULT true,
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.growing_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  vegetable_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  task_type text NOT NULL,
  priority text NOT NULL DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['high'::text, 'medium'::text, 'low'::text])),
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])),
  start_date date NOT NULL,
  end_date date NOT NULL,
  estimated_hours numeric,
  actual_hours numeric,
  progress integer NOT NULL DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
  notes text,
  deleted_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT growing_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT growing_tasks_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT growing_tasks_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT growing_tasks_vegetable_id_fkey FOREIGN KEY (vegetable_id) REFERENCES public.vegetables(id)
);
CREATE TABLE public.photos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vegetable_id uuid NOT NULL,
  storage_path text NOT NULL,
  original_filename text NOT NULL,
  file_size integer,
  mime_type text NOT NULL,
  taken_at timestamp with time zone NOT NULL DEFAULT now(),
  description text,
  tags ARRAY DEFAULT '{}'::text[],
  is_primary boolean DEFAULT false,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT photos_pkey PRIMARY KEY (id),
  CONSTRAINT photos_vegetable_id_fkey FOREIGN KEY (vegetable_id) REFERENCES public.vegetables(id),
  CONSTRAINT photos_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.plot_cells (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  farm_plot_id uuid NOT NULL,
  cell_index integer NOT NULL,
  geometry USER-DEFINED NOT NULL,
  center_point USER-DEFINED NOT NULL,
  row_index integer NOT NULL,
  col_index integer NOT NULL,
  area_sqm numeric DEFAULT 25.0,
  is_cultivated boolean DEFAULT false,
  soil_quality text,
  drainage text,
  slope_degree numeric,
  vegetable_count integer DEFAULT 0,
  last_cultivation_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT plot_cells_pkey PRIMARY KEY (id)
);
CREATE TABLE public.spatial_ref_sys (
  srid integer NOT NULL CHECK (srid > 0 AND srid <= 998999),
  auth_name character varying,
  auth_srid integer,
  srtext character varying,
  proj4text character varying,
  CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  company_id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  full_name text,
  is_active boolean NOT NULL DEFAULT true,
  last_login_at timestamp with time zone,
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.vegetable_deletion_audit (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  deleted_vegetable_id uuid NOT NULL,
  vegetable_snapshot jsonb NOT NULL,
  related_data_count jsonb NOT NULL,
  deletion_reason text NOT NULL,
  deleted_by uuid,
  deleted_at timestamp with time zone DEFAULT now(),
  confirmation_details jsonb,
  business_impact jsonb,
  CONSTRAINT vegetable_deletion_audit_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vegetable_varieties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  variety text,
  category text NOT NULL,
  standard_growth_days integer,
  standard_tasks jsonb DEFAULT '[]'::jsonb,
  planting_season text,
  harvest_season text,
  optimal_temperature_min integer,
  optimal_temperature_max integer,
  water_requirement text,
  sunlight_requirement text,
  soil_ph_min numeric,
  soil_ph_max numeric,
  notes text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT vegetable_varieties_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vegetables (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  name text NOT NULL,
  variety_name text,
  plot_name text,
  area_size numeric,
  plant_count integer,
  planting_date date NOT NULL,
  expected_harvest_start date,
  expected_harvest_end date,
  actual_harvest_start date,
  actual_harvest_end date,
  status text NOT NULL DEFAULT 'planning'::text CHECK (status = ANY (ARRAY['planning'::text, 'growing'::text, 'harvesting'::text, 'completed'::text])),
  notes text,
  deleted_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  spatial_data jsonb,
  polygon_coordinates jsonb,
  plot_center_lat numeric,
  plot_center_lng numeric,
  polygon_color character varying DEFAULT '#22c55e'::character varying,
  CONSTRAINT vegetables_pkey PRIMARY KEY (id),
  CONSTRAINT vegetables_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT vegetables_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.work_report_accounting (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  work_report_id uuid,
  accounting_item_id uuid,
  amount numeric NOT NULL DEFAULT 0,
  custom_item_name character varying,
  notes text,
  is_ai_recommended boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT work_report_accounting_pkey PRIMARY KEY (id),
  CONSTRAINT work_report_accounting_accounting_item_id_fkey FOREIGN KEY (accounting_item_id) REFERENCES public.accounting_items(id),
  CONSTRAINT work_report_accounting_work_report_id_fkey FOREIGN KEY (work_report_id) REFERENCES public.work_reports(id)
);
CREATE TABLE public.work_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  vegetable_id uuid NOT NULL,
  growing_task_id uuid,
  work_type text NOT NULL,
  description text,
  work_date date NOT NULL,
  start_time time without time zone,
  end_time time without time zone,
  duration_hours numeric,
  weather text,
  temperature numeric,
  harvest_amount numeric,
  harvest_unit text,
  harvest_quality text,
  worker_count integer DEFAULT 1,
  notes text,
  deleted_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  expected_price numeric,
  humidity integer CHECK (humidity >= 0 AND humidity <= 100),
  soil_ph numeric CHECK (soil_ph >= 3.0 AND soil_ph <= 10.0),
  soil_ec numeric,
  phosphorus_absorption integer,
  cec numeric,
  exchangeable_calcium integer,
  exchangeable_magnesium integer,
  exchangeable_potassium integer,
  base_saturation numeric CHECK (base_saturation >= 0::numeric AND base_saturation <= 100::numeric),
  calcium_magnesium_ratio numeric,
  magnesium_potassium_ratio numeric,
  available_phosphorus numeric,
  available_silica numeric,
  humus_content numeric,
  ammonium_nitrogen numeric,
  nitrate_nitrogen numeric,
  manganese numeric,
  boron numeric,
  free_iron_oxide numeric,
  soil_notes text,
  photos ARRAY,
  income_items jsonb,
  expense_items jsonb,
  income_total numeric,
  expense_total numeric,
  net_income numeric,
  work_amount numeric,
  work_unit text,
  fertilizer_type text,
  fertilizer_amount numeric,
  fertilizer_unit text,
  expected_revenue numeric,
  work_duration integer,
  CONSTRAINT work_reports_pkey PRIMARY KEY (id),
  CONSTRAINT work_reports_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT work_reports_vegetable_id_fkey FOREIGN KEY (vegetable_id) REFERENCES public.vegetables(id),
  CONSTRAINT work_reports_growing_task_id_fkey FOREIGN KEY (growing_task_id) REFERENCES public.growing_tasks(id),
  CONSTRAINT work_reports_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.work_reports_backup_20250914 (
  id uuid,
  company_id uuid,
  vegetable_id uuid,
  growing_task_id uuid,
  work_type text,
  description text,
  work_date date,
  start_time time without time zone,
  end_time time without time zone,
  duration_hours numeric,
  weather text,
  temperature numeric,
  harvest_amount numeric,
  harvest_unit text,
  harvest_quality text,
  worker_count integer,
  notes text,
  deleted_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone,
  updated_at timestamp with time zone,
  expected_price numeric,
  humidity integer,
  soil_ph numeric,
  soil_ec numeric,
  phosphorus_absorption integer,
  cec numeric,
  exchangeable_calcium integer,
  exchangeable_magnesium integer,
  exchangeable_potassium integer,
  base_saturation numeric,
  calcium_magnesium_ratio numeric,
  magnesium_potassium_ratio numeric,
  available_phosphorus numeric,
  available_silica numeric,
  humus_content numeric,
  ammonium_nitrogen numeric,
  nitrate_nitrogen numeric,
  manganese numeric,
  boron numeric,
  free_iron_oxide numeric,
  soil_notes text,
  photos ARRAY,
  income_items jsonb,
  expense_items jsonb,
  income_total numeric,
  expense_total numeric,
  net_income numeric,
  work_amount numeric,
  work_unit text,
  fertilizer_type text,
  fertilizer_amount numeric,
  fertilizer_unit text,
  expected_revenue numeric,
  work_duration integer
);